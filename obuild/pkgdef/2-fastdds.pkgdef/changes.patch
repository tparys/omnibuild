diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0b841f8..1f20fe7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -23,6 +23,11 @@ if(PROJECT_SOURCE_DIR)
     set(IS_TOP_LEVEL FALSE)
 endif()
 
+find_program(CCACHE_FOUND ccache)
+if(CCACHE_FOUND)
+    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
+endif(CCACHE_FOUND)
+
 # Set CMAKE_BUILD_TYPE to Release by default.
 if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
     message(STATUS "Setting build type to 'Release' as none was specified.")
@@ -175,8 +180,8 @@ endif()
 # Installation paths
 ###############################################################################
 set(BIN_INSTALL_DIR bin/ CACHE PATH "Installation directory for binaries")
-set(INCLUDE_INSTALL_DIR include/ CACHE PATH "Installation directory for C++ headers")
-set(LIB_INSTALL_DIR lib/ CACHE PATH "Installation directory for libraries")
+set(INCLUDE_INSTALL_DIR include/ CACHE STRING "Installation directory for C++ headers")
+set(LIB_INSTALL_DIR lib/ CACHE STRING "Installation directory for libraries")
 set(DATA_INSTALL_DIR share/ CACHE PATH "Installation directory for data")
 if(WIN32)
     set(DOC_DIR "doc")
diff --git a/include/fastrtps/utils/collections/foonathan_memory_helpers.hpp b/include/fastrtps/utils/collections/foonathan_memory_helpers.hpp
index ee9fea5..18a645a 100644
--- a/include/fastrtps/utils/collections/foonathan_memory_helpers.hpp
+++ b/include/fastrtps/utils/collections/foonathan_memory_helpers.hpp
@@ -53,7 +53,7 @@ std::size_t memory_pool_block_size(
     return num_elems
            * ((node_size > MemoryPool::min_node_size ? node_size : MemoryPool::min_node_size) // Room for elements
            * (foonathan::memory::detail::debug_fence_size ? 3 : 1))                           // Room for debug info
-           + foonathan::memory::detail::memory_block_stack::implementation_offset;            // Room for padding
+           + foonathan::memory::detail::memory_block_stack::implementation_offset();          // Room for padding
 }
 
 }  // namespace fastrtps
diff --git a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
index 2a3347c..4e4bf94 100644
--- a/src/cpp/CMakeLists.txt
+++ b/src/cpp/CMakeLists.txt
@@ -398,7 +398,7 @@ elseif(NOT EPROSIMA_INSTALLER)
     # Link library to external libraries.
     target_link_libraries(${PROJECT_NAME} ${PRIVACY} fastcdr foonathan_memory
         ${CMAKE_THREAD_LIBS_INIT} ${CMAKE_DL_LIBS}
-        ${TINYXML2_LIBRARY}
+        tinyxml2
         $<$<BOOL:${LINK_SSL}>:OpenSSL::SSL$<SEMICOLON>OpenSSL::Crypto>
         $<$<BOOL:${WIN32}>:iphlpapi$<SEMICOLON>Shlwapi>
         ${THIRDPARTY_BOOST_LINK_LIBS}
@@ -525,11 +525,7 @@ elseif(NOT EPROSIMA_INSTALLER)
 
     export(TARGETS ${PROJECT_NAME} FILE ${PROJECT_BINARY_DIR}/cmake/config/${PROJECT_NAME}-targets.cmake)
 
-    if(INSTALLER_PLATFORM)
-        set(INSTALL_DESTINATION_PATH ${DATA_INSTALL_DIR}/${PROJECT_NAME}-${INSTALLER_PLATFORM}/cmake)
-    else()
-        set(INSTALL_DESTINATION_PATH ${DATA_INSTALL_DIR}/${PROJECT_NAME}/cmake${MSVCARCH_DIR_EXTENSION_EXT})
-    endif()
+    set(INSTALL_DESTINATION_PATH ${LIB_INSTALL_DIR}/cmake/${PROJECT_NAME})
 
     install(EXPORT ${PROJECT_NAME}-targets
         DESTINATION ${INSTALL_DESTINATION_PATH}
diff --git a/src/cpp/rtps/builtin/data/ProxyHashTables.hpp b/src/cpp/rtps/builtin/data/ProxyHashTables.hpp
index b1fcc6e..5d10a58 100644
--- a/src/cpp/rtps/builtin/data/ProxyHashTables.hpp
+++ b/src/cpp/rtps/builtin/data/ProxyHashTables.hpp
@@ -51,7 +51,7 @@ public:
     node_segregator(
             std::size_t nodes_to_allocate,
             const bool& flag,
-            std::size_t padding = foonathan::memory::detail::memory_block_stack::implementation_offset)
+            std::size_t padding = foonathan::memory::detail::memory_block_stack::implementation_offset())
         : block_size_(nodes_to_allocate
                 * ((node_size > allocator_type::min_node_size ? node_size : allocator_type::min_node_size)
                 // Needs more space in debug info. It allocates space to detect overflow.
